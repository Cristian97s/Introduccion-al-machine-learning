# -*- coding: utf-8 -*-
"""Regresion lineal simple

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EbBE5FUy-b0sj0q5XHFek0PRWl6M7ww7
"""

#se importan las librerias a utilizar
import numpy as np
from sklearn import datasets, linear_model
import matplotlib.pyplot as plt

#importamos los datos de la misma libreria de scikit-learn
boston = datasets.load_boston()
print(boston)
print()

#verifico la informacion contenida en el dataset
print('informacion en el dataset:')
print(boston.keys())
print()

#verifico la caracteristicas del dataset
print('Caracteristicas del dataset:')
print(boston.DESCR)

#verifico la cantidd de datos que hay en el dataset
print('Cantidad de datos:')
print(boston.data.shape)
print()

#verifico la informacion de las columnas
print('Nombres columnas:')
print(boston.feature_names)

### PREPARAR LA DATA REGRESION LINEAL SIMPLE ###

#seleccionamos solamente la columna 5 del dataset
X = boston.data[:, np.newaxis, 5]

#definiendo los datos correspondientes a la etiqueta
y = boston.target

#grafica los datos correspondientes
plt.scatter(X,y)
plt.xlabel('Numero de habitaciones')
plt.ylabel('Valor medio')
plt.show()

### IMPLEMENTACION DE REGRESION LINEAL SIMPLE ###

from sklearn.model_selection import train_test_split

#separacion de los datos de "train" en entrenamiento y prueba para probar los algoritmos
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

#defino el algoritmo a utilizar
lr = linear_model.LinearRegression()

#entrenamiento el modelo
lr.fit(X_train, y_train)

#realizo una prediccion
Y_pred = lr.predict(X_test)

#grafica de los datos juntos con el modelo
plt.scatter(X_test, y_test)
plt.plot(X_test, Y_pred, color='red', linewidth=3)
plt.title('regresion lineal simple')
plt.xlabel('Numero de habitaciones')
plt.ylabel('valor medio')
plt.show()

print()
print('Datos del modelo regresion lineal simple')
print()
print('valor de la pendiente o coeficiente "a":')
print(lr.coef_)
print()
print('valor de la interseccion o coeficiente "b":')
print(lr.intercept_)
print()
print('La ecuecion del modelo es igual a:')
print('y = ', lr.coef_, 'x', lr.intercept_)

print()
print('Precision del modelo:')
print(lr.score(X_train, y_train))
# -*- coding: utf-8 -*-
"""Vectores de soporte de regresion

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lvR9_Q8oLwdgnu23eLgD1oKbAZxBkcRw
"""

### LIBRERIAS A UTILIZAR ###

#se importan la librerias a utilizar
import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets

### PREPARAR LA DATA ###

#Importamos los datos de la misma libreria de scikit-learn
boston = datasets.load_boston()
print(boston)
print()

### ENTRENAMIENTO DE LA DATA ###

#verifico la informacion contenida en el dataset
print('Informacion en el dataset:')
print(boston.keys())
print()

#verifico las caracteristicas del dataset
print('Caracteristicas del dataset:')
print(boston.DESCR)

#verifico la cantidad de datos que hay en los dataset
print('Cantidad de datos:')
print(boston.data.shape)
print()

#verifico la informacion de las columnas
print('Nombres columnas:')
print(boston.feature_names)

### PREPARAR LA DATA VECTORES DE SOPORTE REGRESION ###

#seleccionamos solamente la columna 6 del dataset
X_svr = boston.data[:, np.newaxis, 5]

#defino los datos correspondientes a las etiquetas
y_svr = boston.target

#grafica de los datos correspondientes
plt.scatter(X_svr, y_svr)
plt.show()

### IMPLEMENTACION DE VECTORES DE SOPORTE REGRESION ###

from sklearn.model_selection import train_test_split

#separo los datos de "train" en entrenamiento y prueba para probar los algoritmos
X_train, X_test, y_train, y_test = train_test_split(X_svr, y_svr, test_size=0.2)

from sklearn.svm import SVR

#defino el algoritmo a utilizar
svr = SVR(kernel='linear', C=1.0, epsilon=0.2)

#entreno el modelo
svr.fit(X_train, y_train)

#realizo una prediccion
Y_pred = svr.predict(X_test)

#grafica de los datos juneto con el modelo
plt.scatter(X_test, y_test)
plt.plot(X_test, Y_pred, color='red', linewidth=3)
plt.show()

print()
print('DATOS DEL MODELO VECTORES DE SOPORTE REGRESION')
print()

print('Precision del modelo:')
print(svr.score(X_train, y_train))
# -*- coding: utf-8 -*-
"""Arboles Decisión Clasificación

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WrOnlS8BcH25umQmthxm0_-VCS-0JoCf
"""

### LIBRERIAS A UTILIZAR ###

#se importan las librerias a utilizar
from sklearn import datasets

### PREPARAR LA DATA ###

#importamos los datso de la misma libreria de scikit-learn
dataset = datasets.load_breast_cancer()
print(dataset)

### ENTENDIMIENTO DE LA DATA ###

#verifico la imformacion del dataset
print('Información del dataset:')
print(dataset.keys())
print()

#verificar las caracteristicas del dataset
print('Caracteristicas del dataset:')
print(dataset.DESCR)

#seleccionar todas las columnas
X = dataset.data

#defino los datos correspondientes a las etiquetas
y = dataset.target

### IMPLEMENTACION DE ARBOLES DE DECISION CLASIFICACION ###

from sklearn.model_selection import train_test_split

#separar los datso en entrenamiento y prueba del algoritmo
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

#definir el algoritmo a utilizar ARBOLES DE DECISION
from sklearn.tree import DecisionTreeClassifier

algoritmo = DecisionTreeClassifier(criterion= 'entropy')

#entrenar el modelo
algoritmo.fit(X_train, y_train)

#realizar una predicion
y_pred = algoritmo.predict(X_test)

#verificar la matriz de confusion
from sklearn.metrics import confusion_matrix

matriz = confusion_matrix(y_test, y_pred)
print('Matriz de Confusion:')
print(matriz)

#calculo de la precision del modelo
from sklearn.metrics import precision_score

precision = precision_score(y_test, y_pred)
print('Precision del modelo:')
print(precision)
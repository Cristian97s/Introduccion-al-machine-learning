# -*- coding: utf-8 -*-
"""Arbolres Decision Regrecion

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BVVzaMYlwl1zQEAs62u0tLP4lgdv78zZ
"""

### LIBRERIAS A UTILIZAR ###

#se importan las librerias a utilizar
import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets

### preparar la data ###

#importacion de los datos de la misma libreria de scikt-learn
boston = datasets.load_boston()
print(boston)
print()

### Entrenamiendo de la data ###

#verifico la informacion contenida en el dataset
print('Informacion contenida en el dataset:')
print(boston.keys())
print()

# verifico las caracteristicas del dataset
print('Caracteristicas del dataset:')
print(boston.DESCR)

#verifico la cantidad de datos que hay en los dataset
print('Cantidad de datos:')
print(boston.data.shape)
print()

#verifico la informacion de las columnas
print('Nombres columnas:')
print(boston.feature_names)

### PREPARAR LA DATA ARBOLES DE DECISION REGRESION ###

#Seleccionamos solamente la columna 6 del dataset
X_adr = boston.data[:, np.newaxis, 5]

#defino los datos correspondiendtes a las etiquetas
y_adr = boston.target

#grafica de los datos correspondientes
plt.scatter(X_adr, y_adr)
plt.show()

### IMPLEMENTACION DE ARBOLES DE DECISION REGRESION ###

from sklearn.model_selection import train_test_split

#separo los datos de "train" en entrenamiento y prueba para probar los algoritmos
X_train, X_test, y_train, y_test = train_test_split(X_adr, y_adr, test_size=0.2)

from sklearn.tree import DecisionTreeRegressor

#defino el algoritmo a utilizar
adr = DecisionTreeRegressor(max_depth = 5)

#entrenando el modelo
adr.fit(X_train, y_train)

#realizacion de la prediccion
Y_pred = adr.predict(X_test)

#grafica de los datos de prueba con la prediccion
X_grid = np.arange(min(X_test), max(X_test), 0.1)
X_grid = X_grid.reshape((len(X_grid), 1))
plt.scatter(X_test, y_test)
plt.plot(X_grid, adr.predict(X_grid), color='red', linewidth=3)
plt.show()

print('DATOS DEL MODELO ARBOLES DE DECISION REGRESION')
print()

print('Precision del modelo:')
print(adr.score(X_train, y_train))